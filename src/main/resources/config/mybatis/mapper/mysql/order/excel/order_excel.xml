<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order.excel">
	<resultMap id="OrdersInfoResultMap" type="OrdersVO">
		<id property="orSerialSpecialNumber" column="or_serial_special_number" javaType="String"/>
		<result property="pmFk" column="pm_fk" javaType="int"/>
		<result property="ssFk" column="ss_fk" javaType="int"/>
		<result property="ssName" column="ss_name" javaType="String"/>
		<result property="orBuyerId" column="or_buyer_id" javaType="String"/>
		<result property="orBuyerName" column="or_buyer_name" javaType="String"/>
		<result property="orBuyerAnotherName" column="or_buyer_another_name" javaType="String"/>
		<result property="orBuyerContractNumber1" column="or_buyer_contract_number1" javaType="String"/>
		<result property="orBuyerContractNumber2" column="or_buyer_contract_number2" javaType="String"/>
		<result property="orReceiverName" column="or_receiver_name" javaType="String"/>
		<result property="orProduct" column="or_product" javaType="String"/>
		<result property="orProductType" column="or_product_type" javaType="String"/>
		<result property="orProductOption" column="or_product_option" javaType="String"/>
		<result property="orAmount" column="or_amount" javaType="int"/>
		<result property="orDeliveryMessage" column="or_delivery_message" javaType="String"/>
		<result property="orDeliveryType" column="or_delivery_type" javaType="String"/>
		<result property="orDeliveryCompany" column="or_delivery_company" javaType="String"/>
		<result property="orOrderNumber" column="or_order_number" javaType="String"/>
		<result property="orProductOrderNumber" column="or_product_order_number" javaType="String"/>
		<result property="orProductNumber" column="or_product_number" javaType="String"/>
		<result property="orPaymentPositionType" column="or_payment_position_type" javaType="String"/>
		<result property="orSettlementDay" column="or_settlement_day" javaType="java.sql.Timestamp"/>
		<result property="orProductPrice" column="or_product_price" javaType="int"/>
		<result property="orProductOptionPrice" column="or_product_option_price" javaType="int"/>
		<result property="orDiscountPrice" column="or_discount_price" javaType="int"/>
		<result property="orTotalPrice" column="or_total_price" javaType="int"/>
		<result property="orTotalCost" column="or_total_cost" javaType="int"/>
		<result property="orCheckDay" column="or_check_day" javaType="java.sql.Date"/>
		<result property="orSendingDeadline" column="or_sending_deadline" javaType="java.sql.Date"/>
		<result property="orSendingDay" column="or_sending_day" javaType="java.sql.Date"/>
		<result property="orDeliveryChargeType" column="or_delivery_charge_type" javaType="String"/>
		<result property="orDeliveryNumber" column="or_delivery_number" javaType="String"/>
		<result property="orDeliveryPrice" column="or_delivery_price" javaType="int"/>
		<result property="orDeliveryDiscountPrice" column="or_delivery_discount_price" javaType="int"/>
		<result property="orReceiverContractNumber1" column="or_receiver_contract_number1" javaType="String"/>
		<result property="orReceiverContractNumber2" column="or_receiver_contract_number2" javaType="String"/>
		<result property="orShippingAddressNumber" column="or_shipping_address_number" javaType="String"/>
		<result property="orShippingProvince" column="or_shipping_province" javaType="String"/>
		<result property="orShippingAddress" column="or_shipping_address" javaType="String"/>
		<result property="orShippingAddressDetail" column="or_shipping_address_detail" javaType="String"/>
		<result property="orSpecialRegionDetail" column="or_special_region_detail" javaType="boolean"/>
		<result property="orSendingAddress" column="or_sending_address" javaType="String"/>
		<result property="orPaymentType" column="or_payment_type" javaType="String"/>
		<result property="orPaymentCommision" column="or_payment_commision" javaType="int"/>
		<result property="orAnotherPaymentCommision" column="or_another_payment_commision" javaType="int"/>
		<result property="orInflowRoute" column="or_inflow_route" javaType="String"/>
		<result property="orRequest" column="or_request" javaType="String"/>
		<result property="orTaxFlag" column="or_tax_flag" javaType="boolean"/>
		<result property="orDevideFlag" column="or_devide_flag" javaType="boolean"/>
		<result property="orRegdate" column="or_regdate" javaType="java.sql.Timestamp"/>
		<result property="productMatchingChecking" column="product_matching_checking" javaType="boolean"/>
		<result property="optionMatchingChecking" column="option_matching_checking" javaType="boolean"/>
		<result property="productChecking" column="product_checking" javaType="boolean"/>
		<result property="orCancledFlag" column="or_cancled_flag" javaType="boolean"/>
		
		<!-- 상품명 매칭 -->
		<collection property="productMatchingVOList" ofType="ProductMatchingVO">
			<id property="pmPk" column="pm_pk" javaType="int"/>
			<result property="productFk" column="product_fk" javaType="int"/>
			<result property="pmStoreProductName" column="pm_store_product_name" javaType="String"/>
			<result property="pmEachFlag" column="pm_each_flag" javaType="boolean"/>
			<result property="pmEachs" column="pm_eachs" javaType="int"/>
			<result property="pmRegdate" column="pm_regdate" javaType="java.sql.Timestamp"/>
			
			
			<!-- <collection property="productsVOList" ofType="ProductsVO">
				<id property="productPk" column="product_pk" javaType="int"/>
				<result property="cfFk" column="cf_fk" javaType="int"/>
				<result property="productName" column="product_name" javaType="String"/>
				<result property="productFlag" column="product_flag" javaType="boolean"/>
			</collection> -->
			
			<!-- 옵션명 매칭 -->
			<collection property="optionMatchingVOList" ofType="OptionMatchingVO">
				<id property="omPk" column="om_pk" javaType="int"/>
				<result property="pmFk" column="pm_fk" javaType="int"/>
				<result property="optionFk" column="option_fk" javaType="int"/>
				<result property="omStoreOptionName" column="om_store_option_name" javaType="String"/>
				<result property="omOptionAmount" column="om_option_amount" javaType="int"/>
				<result property="omOptionMultipleFlag" column="om_option_multiple_flag" javaType="boolean"/>
				<result property="omOptionMultipleEach" column="om_option_multiple_each" javaType="int"/>
				<result property="omOptionMultipleAmount" column="om_option_multiple_amount" javaType="int"/>
				<result property="omCombineFlag" column="om_combine_flag" javaType="boolean"/>
				<result property="omSupplyFlag" column="om_supply_flag" javaType="boolean"/>
				<result property="omRegdate" column="om_regdate" javaType="java.sql.Timestamp"/>
				
				<!-- <collection property="optionsVOList" ofType="OptionsVO">
					<id property="optionPk" column="option_pk" javaType="int"/>
					<result property="optionName" column="option_name" javaType="String"/>
			
				</collection> -->
				
				<collection property="productOptionList" ofType="ProductOptionVO">
					<id property="optionPk" column="option_pk" javaType="int"/>
					<result property="optionName" column="option_name" javaType="String"/>
					<result property="cfFk" column="cf_fk" javaType="int"/>
					<result property="productPk" column="product_pk" javaType="int"/>
					<result property="productName" column="product_name" javaType="String"/>
					<result property="productFlag" column="product_flag" javaType="boolean"/>
				</collection>
				
			</collection>
			
		</collection>
		
	</resultMap>
	
	<resultMap id="productMatchingResultMap" type="OrdersVO">
		<id property="orPk" column="or_pk" javaType="int"/>
		<result property="pmFk" column="pm_fk" javaType="int"/>
		<result property="ssFk" column="ss_fk" javaType="int"/>
		<result property="ssName" column="ss_name" javaType="String"/>
		<result property="orBuyerId" column="or_buyer_id" javaType="String"/>
		<result property="orBuyerName" column="or_buyer_name" javaType="String"/>
		<result property="orBuyerAnotherName" column="or_buyer_another_name" javaType="String"/>
		<result property="orBuyerContractNumber1" column="or_buyer_contract_number1" javaType="String"/>
		<result property="orBuyerContractNumber2" column="or_buyer_contract_number2" javaType="String"/>
		<result property="orReceiverName" column="or_receiver_name" javaType="String"/>
		<result property="orProduct" column="or_product" javaType="String"/>
		<result property="orProductType" column="or_product_type" javaType="String"/>
		<result property="orProductOption" column="or_product_option" javaType="String"/>
		<result property="orAmount" column="or_amount" javaType="int"/>
		<result property="orTotalPrice" column="or_total_price" javaType="int"/>
		<result property="orTotalCost" column="or_total_cost" javaType="int"/>
		<result property="orRegdate" column="or_regdate" javaType="java.sql.Timestamp"/>

		
		<!-- 상품명 매칭 전용 reultmap -->
		<collection property="productMatchingVOList" ofType="ProductMatchingVO">
			<id property="pmPk" column="pm_pk" javaType="int"/>
			<result property="productFk" column="product_fk" javaType="int"/>
			<result property="pmStoreProductName" column="pm_store_product_name" javaType="String"/>
			<result property="pmEachFlag" column="pm_each_flag" javaType="boolean"/>
			<result property="pmEachs" column="pm_eachs" javaType="int"/>
			<result property="pmRegdate" column="pm_regdate" javaType="java.sql.Timestamp"/>
			
			
			<collection property="productsVOList" ofType="ProductsVO">
				<id property="productPk" column="product_pk" javaType="int"/>
				<result property="cfFk" column="cf_fk" javaType="int"/>
				<result property="productName" column="product_name" javaType="String"/>
				<result property="productFlag" column="product_flag" javaType="boolean"/>
			</collection>
			
		</collection>
		
	</resultMap>

	<resultMap id="OrdersListInfoResultMap" type="OrdersVOList">
		<id property="orSerialSpecialNumber" column="or_serial_special_number" javaType="String"/>
		<result property="orBuyerId" column="or_buyer_id" javaType="String"/>
		<result property="orBuyerName" column="or_buyer_name" javaType="String"/>
		<result property="orBuyerAnotherName" column="or_buyer_another_name" javaType="String"/>
		<result property="orBuyerContractNumber1" column="or_buyer_contract_number1" javaType="String"/>
		<result property="orBuyerContractNumber2" column="or_buyer_contract_number2" javaType="String"/>
		<result property="orReceiverName" column="or_receiver_name" javaType="String"/>
		<result property="orReceiverContractNumber1" column="or_receiver_contract_number1" javaType="String"/>
		<result property="orReceiverContractNumber2" column="or_receiver_contract_number2" javaType="String"/>
		<result property="orDeliveryInvoiceNumber" column="or_delivery_invoice_number" javaType="String"/>
		
		<collection property="orVoList" ofType="OrdersVO">
			<id property="orPk" column="or_pk" javaType="int"/>
			<result property="pmFk" column="pm_fk" javaType="int"/>
			<result property="ssFk" column="ss_fk" javaType="int"/>
			<result property="orProduct" column="or_product" javaType="String"/>
			<result property="orProductType" column="or_product_type" javaType="String"/>
			<result property="orProductOption" column="or_product_option" javaType="String"/>
			<result property="orAmount" column="or_amount" javaType="int"/>
			<result property="orDeliveryMessage" column="or_delivery_message" javaType="String"/>
			<result property="orDeliveryType" column="or_delivery_type" javaType="String"/>
			<result property="orDeliveryCompany" column="or_delivery_company" javaType="String"/>
			<result property="orOrderNumber" column="or_order_number" javaType="String"/>
			<result property="orProductOrderNumber" column="or_product_order_number" javaType="String"/>
			<result property="orProductNumber" column="or_product_number" javaType="String"/>
			<result property="orPaymentPositionType" column="or_payment_position_type" javaType="String"/>
			<result property="orSettlementDay" column="or_settlement_day" javaType="java.sql.Timestamp"/>
			<result property="orProductPrice" column="or_product_price" javaType="int"/>
			<result property="orProductOptionPrice" column="or_product_option_price" javaType="int"/>
			<result property="orDiscountPrice" column="or_discount_price" javaType="int"/>
			<result property="orTotalPrice" column="or_total_price" javaType="int"/>
			<result property="orTotalCost" column="or_total_cost" javaType="int"/>
			<result property="orCheckDay" column="or_check_day" javaType="java.sql.Date"/>
			<result property="orSendingDeadline" column="or_sending_deadline" javaType="java.sql.Date"/>
			<result property="orSendingDay" column="or_sending_day" javaType="java.sql.Date"/>
			<result property="orDeliveryChargeType" column="or_delivery_charge_type" javaType="String"/>
			<result property="orDeliveryNumber" column="or_delivery_number" javaType="String"/>
			<result property="orDeliveryPrice" column="or_delivery_price" javaType="int"/>
			
			<result property="orShippingAddressNumber" column="or_shipping_address_number" javaType="String"/>
			<result property="orShippingProvince" column="or_shipping_province" javaType="String"/>
			<result property="orShippingAddress" column="or_shipping_address" javaType="String"/>
			<result property="orShippingAddressDetail" column="or_shipping_address_detail" javaType="String"/>
			<result property="orSpecialRegionDetail" column="or_special_region_detail" javaType="boolean"/>
			<result property="orSendingAddress" column="or_sending_address" javaType="String"/>
			<result property="orPaymentType" column="or_payment_type" javaType="String"/>
			<result property="orPaymentCommision" column="or_payment_commision" javaType="int"/>
			<result property="orAnotherPaymentCommision" column="or_another_payment_commision" javaType="int"/>
			<result property="orInflowRoute" column="or_inflow_route" javaType="String"/>
			<result property="orRequest" column="or_request" javaType="String"/>
			<result property="orTaxFlag" column="or_tax_flag" javaType="boolean"/>
			<result property="orDevideFlag" column="or_devide_flag" javaType="boolean"/>
			<result property="orRegdate" column="or_regdate" javaType="java.sql.Timestamp"/>
			<result property="productMatchingChecking" column="product_matching_checking" javaType="boolean"/>
			<result property="optionMatchingChecking" column="option_matching_checking" javaType="boolean"/>
			<result property="productChecking" column="product_checking" javaType="boolean"/>
			<result property="orCancledFlag" column="or_cancled_flag" javaType="boolean"/>
			<result property="orInvFlag" column="or_Inv_flag" javaType="boolean"/>
			
			<!-- or_pk 를 리스트 형태로 가져옴 -->
			<result property="orUserColumn1" column="or_user_column1" javaType="String"/>
			
			<!-- 상품명 매칭 -->
			<collection property="productMatchingVOList" ofType="ProductMatchingVO">
				<id property="pmPk" column="pm_pk" javaType="int"/>
				<!-- <result property="productPk" column="product_pk" javaType="int"/> -->
				<result property="pmStoreProductName" column="pm_store_product_name" javaType="String"/>
				<result property="pmEachFlag" column="pm_each_flag" javaType="boolean"/>
				<result property="pmEachs" column="pm_eachs" javaType="int"/>
				<result property="pmRegdate" column="pm_regdate" javaType="java.sql.Timestamp"/>
				
				<!-- <collection property="productsVOList" ofType="ProductsVO">
					<id property="productPk" column="product_pk" javaType="int"/>
					<result property="cfFk" column="cf_fk" javaType="int"/>
					<result property="productName" column="product_name" javaType="String"/>
					<result property="productFlag" column="product_flag" javaType="boolean"/>
				</collection> -->
				
				<!-- 옵션명 매칭 -->
				<collection property="optionMatchingVOList" ofType="OptionMatchingVO">
					<id property="omPk" column="om_pk" javaType="int"/>
					<result property="pmFk" column="pm_fk" javaType="int"/>
					<result property="optionFk" column="option_fk" javaType="int"/>
					<result property="omStoreOptionName" column="om_store_option_name" javaType="String"/>
					<result property="omOptionAmount" column="om_option_amount" javaType="int"/>
					<result property="omOptionMultipleFlag" column="om_option_multiple_flag" javaType="boolean"/>
					<result property="omOptionMultipleEach" column="om_option_multiple_each" javaType="int"/>
					<result property="omOptionMultipleAmount" column="om_option_multiple_amount" javaType="int"/>
					<result property="omCombineFlag" column="om_combine_flag" javaType="boolean"/>
					<result property="omRegdate" column="om_regdate" javaType="java.sql.Timestamp"/>
					
					<!-- <collection property="optionsVOList" ofType="OptionsVO">
						<id property="optionPk" column="option_pk" javaType="int"/>
						<result property="optionName" column="option_name" javaType="String"/>
				
					</collection> -->
					
					<collection property="productOptionList" ofType="ProductOptionVO">
						<id property="optionPk" column="option_pk" javaType="int"/>
						<result property="optionName" column="option_name" javaType="String"/>
						<result property="anotherOptionPk" column="another_option_pk" javaType="int"/>
						<result property="anotherOptionQty" column="another_option_qty" javaType="int"/>
						
						<!-- cfFk로 수량 가져옴  -->
						<result property="cfFk" column="cf_fk" javaType="int"/>
						<result property="productPk" column="product_pk" javaType="int"/>
						<result property="productName" column="product_name" javaType="String"/>
						<result property="productFlag" column="product_flag" javaType="boolean"/>
					</collection>
					
				</collection>
				
			</collection>
			
		</collection>
	</resultMap>
	
		<resultMap type="ProductMatchingVO" id="productMatchingInfoResultMap">
				<id property="pmPk" column="pm_pk" javaType="int"/>
				<result property="pmStoreProductName" column="pm_store_product_name" javaType="String"/>
				<result property="pmEachFlag" column="pm_each_flag" javaType="boolean"/>
				<result property="pmEachs" column="pm_eachs" javaType="int"/>
				<result property="pmRegdate" column="pm_regdate" javaType="java.sql.Timestamp"/>
				
				<collection property="productsVOList" ofType="ProductsVO">
					<id property="productPk" column="product_pk" javaType="int"/>
					<result property="cfFk" column="cf_fk" javaType="int"/>
					<result property="productName" column="product_name" javaType="String"/>
					<result property="productFlag" column="product_flag" javaType="boolean"/>
				</collection>
				
		</resultMap>
	
	<!-- 엑셀 주문서 데이터 값 넣을 때 -->
	<insert id="insertOrderData" useGeneratedKeys="true" keyProperty="orPk" parameterType="com.gogi.proj.orders.vo.OrdersVO">
		INSERT INTO orders(or_buyer_id, or_buyer_name, or_buyer_another_name, or_buyer_contract_number1, or_buyer_contract_number2, or_receiver_name, or_product, or_product_type, or_product_option,
							or_amount, or_delivery_message, or_delivery_type, or_delivery_company, or_order_number, or_product_order_number, or_product_number, or_payment_position_type, 
							or_product_price, or_product_option_price, or_discount_price, or_total_price,  or_check_day, or_sending_deadline, or_delivery_charge_type, or_delivery_number,
							or_delivery_price, or_delivery_discount_price, or_receiver_contract_number1, or_receiver_contract_number2, or_shipping_address_number, or_shipping_province, or_shipping_address,
							or_shipping_address_detail, or_sending_address, or_payment_type, or_payment_commision, or_another_payment_commision, or_inflow_route, or_tax_flag, or_regdate, or_settlement_day, ss_fk,
							or_delivery_invoice_number, or_delivery_charge_payment_type, or_delivery_special_price, or_user_column1, or_user_column4, or_fk, or_deposit_flag, edt_fk)
		SELECT #{orBuyerId}, #{orBuyerName}, #{orBuyerAnotherName}, #{orBuyerContractNumber1}, #{orBuyerContractNumber2}, #{orReceiverName}, #{orProduct}, #{orProductType}, #{orProductOption},
				#{orAmount}, #{orDeliveryMessage}, #{orDeliveryType}, #{orDeliveryCompany}, #{orOrderNumber}, #{orProductOrderNumber}, #{orProductNumber}, #{orPaymentPositionType}, 
				#{orProductPrice}, #{orProductOptionPrice}, #{orDiscountPrice}, #{orTotalPrice},  #{orCheckDay}, #{orSendingDeadline}, #{orDeliveryChargeType}, #{orDeliveryNumber},
				#{orDeliveryPrice}, #{orDeliveryDiscountPrice}, #{orReceiverContractNumber1}, #{orReceiverContractNumber2}, #{orShippingAddressNumber}, #{orShippingProvince}, #{orShippingAddress},
				#{orShippingAddressDetail}, #{orSendingAddress}, #{orPaymentType}, #{orPaymentCommision}, #{orAnotherPaymentCommision}, #{orInflowRoute}, #{orTaxFlag}, #{orRegdate}, #{orSettlementDay}, #{ssFk},
				#{orDeliveryInvoiceNumber}, #{orDeliveryChargePaymentType}, #{orDeliverySpecialPrice}, #{orUserColumn1}, #{orUserColumn4}, #{orFk}, #{orDepositFlag}, #{edtFk}
		FROM dual
		WHERE NOT EXISTS(
			SELECT 
				or_pk 
			FROM 
				orders 
			WHERE 
				or_product_order_number = #{orProductOrderNumber}
				AND ss_fk = #{ssFk}
				AND or_order_number = #{orOrderNumber}
				AND or_sending_deadline >= date_add(now(), interval -2 month) 
			)
		
	</insert>
	
	<!-- 주문서 나눌 때 -->
	<insert id="insertDevideOrderData" useGeneratedKeys="true" keyProperty="orPk" parameterType="com.gogi.proj.orders.vo.OrdersVO">
		INSERT INTO orders(or_serial_special_number, or_buyer_id, or_buyer_name, or_buyer_another_name, or_buyer_contract_number1, or_buyer_contract_number2, or_receiver_name, or_product, or_product_type, or_product_option,
							or_amount, or_delivery_message, or_delivery_type, or_delivery_company, or_order_number, or_product_order_number, or_product_number, or_payment_position_type, 
							or_product_price, or_product_option_price, or_discount_price, or_total_price, or_total_cost,  or_check_day, or_sending_deadline, or_delivery_charge_type, or_delivery_number,
							or_delivery_price, or_delivery_discount_price, or_receiver_contract_number1, or_receiver_contract_number2, or_shipping_address_number, or_shipping_province, or_shipping_address,
							or_shipping_address_detail, or_sending_address, or_payment_type, or_payment_commision, or_another_payment_commision, or_inflow_route, or_tax_flag, or_regdate, or_settlement_day, ss_fk,
							or_delivery_invoice_number, or_delivery_charge_payment_type, or_delivery_special_price, or_user_column1,or_user_column4, or_devide_flag, or_special_region_flag, or_special_region_check_flag, or_output_flag, or_output_date,
							or_rec_type, or_rec_memo, or_rec_storage_place, edt_fk)
		VALUES( #{orSerialSpecialNumber}, #{orBuyerId}, #{orBuyerName}, #{orBuyerAnotherName}, #{orBuyerContractNumber1}, #{orBuyerContractNumber2}, #{orReceiverName}, #{orProduct}, #{orProductType}, #{orProductOption},
				#{orAmount}, #{orDeliveryMessage}, #{orDeliveryType}, #{orDeliveryCompany}, #{orOrderNumber}, #{orProductOrderNumber}, #{orProductNumber}, #{orPaymentPositionType}, 
				#{orProductPrice}, #{orProductOptionPrice}, #{orDiscountPrice}, #{orTotalPrice}, #{orTotalCost}, #{orCheckDay}, #{orSendingDeadline}, #{orDeliveryChargeType}, #{orDeliveryNumber},
				#{orDeliveryPrice}, #{orDeliveryDiscountPrice}, #{orReceiverContractNumber1}, #{orReceiverContractNumber2}, #{orShippingAddressNumber}, #{orShippingProvince}, #{orShippingAddress},
				#{orShippingAddressDetail}, #{orSendingAddress}, #{orPaymentType}, #{orPaymentCommision}, #{orAnotherPaymentCommision}, #{orInflowRoute}, #{orTaxFlag}, #{orRegdate}, #{orSettlementDay}, #{ssFk},
				#{orDeliveryInvoiceNumber}, #{orDeliveryChargePaymentType}, #{orDeliverySpecialPrice}, #{orUserColumn1},#{orUserColumn4},  #{orDevideFlag}, #{orSpecialRegionFlag}, #{orSpecialRegionCheckFlag}, #{orOutputFlag}, #{orOutputDate},
				#{orRecType}, #{orRecMemo}, #{orRecStoragePlace}, #{edtFk} )
	</insert>
	
	<!-- 상품 추가할 때 -->
	<insert id="insertAddOrderData" useGeneratedKeys="true" keyProperty="orPk" parameterType="com.gogi.proj.orders.vo.OrdersVO">
		INSERT INTO orders(or_serial_special_number, or_buyer_id, or_buyer_name, or_buyer_another_name, or_buyer_contract_number1, or_buyer_contract_number2, or_receiver_name, or_product, or_product_type, or_product_option,
							or_amount, or_delivery_message, or_delivery_type, or_delivery_company, or_order_number, or_product_order_number, or_product_number, or_payment_position_type, 
							or_product_price, or_product_option_price, or_discount_price, or_total_price, or_total_cost,  or_check_day, or_sending_deadline, or_delivery_charge_type, or_delivery_number,
							or_delivery_price, or_delivery_discount_price, or_receiver_contract_number1, or_receiver_contract_number2, or_shipping_address_number, or_shipping_province, or_shipping_address,
							or_shipping_address_detail, or_sending_address, or_payment_type, or_payment_commision, or_another_payment_commision, or_inflow_route, or_tax_flag, or_regdate, or_settlement_day, ss_fk,
							or_delivery_invoice_number, or_delivery_charge_payment_type, or_delivery_special_price, or_user_column1, or_user_column4,or_devide_flag, or_special_region_flag, or_special_region_check_flag, or_output_flag, or_output_date,
							or_rec_type, or_rec_memo, or_rec_storage_place, edt_fk)
		VALUES( #{orSerialSpecialNumber}, #{orBuyerId}, #{orBuyerName}, #{orBuyerAnotherName}, #{orBuyerContractNumber1}, #{orBuyerContractNumber2}, #{orReceiverName}, #{orProduct}, #{orProductType}, #{orProductOption},
				#{orAmount}, #{orDeliveryMessage}, #{orDeliveryType}, #{orDeliveryCompany}, #{orOrderNumber}, #{orProductOrderNumber}, #{orProductNumber}, #{orPaymentPositionType}, 
				#{orProductPrice}, #{orProductOptionPrice}, #{orDiscountPrice}, #{orTotalPrice}, #{orTotalCost}, #{orCheckDay}, #{orSendingDeadline}, #{orDeliveryChargeType}, #{orDeliveryNumber},
				#{orDeliveryPrice}, #{orDeliveryDiscountPrice}, #{orReceiverContractNumber1}, #{orReceiverContractNumber2}, #{orShippingAddressNumber}, #{orShippingProvince}, #{orShippingAddress},
				#{orShippingAddressDetail}, #{orSendingAddress}, #{orPaymentType}, #{orPaymentCommision}, #{orAnotherPaymentCommision}, #{orInflowRoute}, #{orTaxFlag}, #{orRegdate}, #{orSettlementDay}, #{ssFk},
				#{orDeliveryInvoiceNumber}, #{orDeliveryChargePaymentType}, #{orDeliverySpecialPrice}, #{orUserColumn1},#{orUserColumn4},  #{orDevideFlag},#{orSpecialRegionFlag}, #{orSpecialRegionCheckFlag}, #{orOutputFlag}, #{orOutputDate},
				#{orRecType}, #{orRecMemo}, #{orRecStoragePlace}, #{edtFk} )
	</insert>
	
	<update id="updateDevideOrderData" parameterType="com.gogi.proj.orders.vo.OrdersVO">
		UPDATE
			orders
		SET
			or_amount = #{orAmount},
			or_product_order_number = #{orProductOrderNumber},
			or_product_price = #{orProductPrice},
			or_product_option_price = #{orProductOptionPrice},
			or_discount_price = #{orDiscountPrice},
			or_total_price = #{orTotalPrice},
			or_total_cost = #{orTotalCost},
			or_payment_commision = #{orPaymentCommision},
			or_another_payment_commision = #{orAnotherPaymentCommision},
			or_devide_flag = #{orDevideFlag}
		WHERE
			or_pk = #{orPk}
	</update>
	
	<!-- 사용하지 않음 -->
	<select id="selectOrderDuplicationData" parameterType="com.gogi.proj.orders.vo.OrdersVO" resultType="int">
		SELECT or_pr
		FROM orders
		WHERE or_product_order_number = #{orProductOrderNumber}
	</select>
	
	<select id="selectOrdersByPk" parameterType="int" resultType="com.gogi.proj.orders.vo.OrdersVO">
		SELECT
			*
		FROM
			orders
		WHERE
			or_pk = #{orPk}
	</select>
	
	<!-- 당일 입력된 주문서 데이터 가져오기-->
	<select id="selectTotalOrderInToday" resultType="OrdersVO">
		SELECT
			*
		FROM 
			orders
		WHERE 
			DATE_FORMAT(or_regdate, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') 
		
	</select>
	
	<delete id="deleteExcelGiftOrderByOrFk" parameterType="OrdersVO">
		DELETE FROM
			orders
		WHERE
			or_fk = #{orPk}
	</delete>
	
	<!-- 오늘 들어온 날짜로 주문건, 입력일 조회하기 -->
	<select id="selectOrdersCountingByInputDate" resultType="OrdersVO">
		SELECT
			COUNT(od.or_pk) AS or_pk,
		    od.or_regdate,
		    ss.ss_name,
		    od.ss_fk
		FROM
			orders od
			INNER JOIN store_section ss ON od.ss_fk = ss.ss_pk
		WHERE
			<![CDATA[
				od.or_regdate > DATE_FORMAT( NOW() , '%Y-%m-%d')			
			]]>
		GROUP BY
			od.or_regdate,
			ss.ss_name,
			od.ss_fk
	</select>
	
	<!-- 입력일로 주문서를 조회하여 일괄 삭제하기 -->
	<delete id="deleteOrdersByDate" parameterType="OrdersVO">
		DELETE FROM 
			orders
		WHERE 
			or_pk IN(
				SELECT 
					inne.or_pk
				FROM(
					SELECT
						or_pk
					FROM
						orders
					WHERE
						ss_fk = #{ssFk}
						AND or_regdate = #{orRegdate}
				
				) inne
			)
	</delete>
	
	
	<!-- 주문서 고유번호로 입력된 주문서 삭제하기 -->
	<delete id="deleteOrders" parameterType="int">
		DELETE FROM 
			orders
		WHERE or_pk = #{orPk}
	</delete>
	
	<!-- 주문번호로 해당 데이터 전부 가져오기 -->
	<select id="selectOrderByOrOrderNumber" parameterType="OrdersVO" resultType="OrdersVO">
		SELECT
			*
		FROM 
			orders
		WHERE
			or_order_number = #{orOrderNumber}
	</select>
	
	<!-- 당일 등록된 주문서를 입력 순으로 정렬하여 날짜와 시간대만 가져오기 (차수로 검색 할 수 있도록)-->
	<select id="selectOrdersInsertCountingByToday" resultType="OrdersVO">
		SELECT 
			or_regdate 
		FROM 
			 orders
		WHERE
			 DATE_FORMAT(or_regdate, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d')
		GROUP BY
			 or_regdate
	</select>
	
	<select id="selectNotMatchingedOrders" resultMap="productMatchingResultMap" parameterType="OrderSearchVO">
		SELECT 
			inne.*
		FROM
			(		
				SELECT
					(@RNUM:=@RNUM + 1) AS ROWNUM, search_orders.*
				FROM 
					(SELECT 
						od.or_pk,
						ss.ss_name,
						od.or_buyer_name,
						od.or_receiver_name,
						od.or_product,
						od.or_product_option,
						od.or_amount,
						od.or_total_price,
						od.pm_fk,
						pm.pm_pk,
						pro.product_pk,
						pro.product_name
					FROM
						orders od
						INNER JOIN store_section ss ON od.ss_fk = ss.ss_pk
						LEFT JOIN product_matching pm ON pm.pm_pk = od.pm_fk
						LEFT JOIN products pro ON pm.product_fk = pro.product_pk
					<trim prefix="WHERE" prefixOverrides="AND |OR ">
						<if test="datePeriod == 0">
							<![CDATA[
								AND ${dateType} > DATE_FORMAT(NOW(), '%Y-%m-%d')
								AND  ${dateType} <= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 1 DAY), '%Y-%m-%d')
							]]>
						</if>
						<if test="datePeriod == 1">
							<![CDATA[
								AND ${dateType} >= DATE_ADD(DATE_FORMAT(NOW(), '%Y-%m-%d'),INTERVAL -7 DAY)
							]]>
						</if>
						<if test="datePeriod == 2">
							<![CDATA[
								AND ${dateType} > #{dateStart} 
								AND ${dateType} <= DATE_FORMAT(DATE_ADD(#{dateEnd}, INTERVAL 1 DAY), '%Y-%m-%d')
							]]>
						</if>
						<if test="searchType == 'buyerName'">
							AND or_buyer_name LIKE CONCAT('%',#{searchKeyword},'%')
						</if>
						<if test="searchType == 'receiverName'">
							AND or_receiver_name LIKE CONCAT('%',#{searchKeyword},'%')
						</if>
						<if test="searchType == 'buyerNum'">
							AND or_buyer_contract_number1 LIKE CONCAT('%',#{searchKeyword},'%')
						</if>
						<if test="searchType == 'receiverNum'">
							AND or_receiver_contract_number1 LIKE CONCAT('%',#{searchKeyword},'%')
						</if>
						<if test="searchType == 'orderNum'">
							AND or_order_number LIKE CONCAT('%',#{searchKeyword},'%')
						</if>
						<if test="searchType == 'orderProductNum'">
							AND or_product_order_number LIKE CONCAT('%',#{searchKeyword},'%')
						</if>
						<if test="searchType == 'storeProduct'">
							AND or_product LIKE CONCAT('%',#{searchKeyword},'%') 
						</if>
						<if test="searchType == 'matchingProduct'">
							AND pro.product_name LIKE CONCAT('%',#{searchKeyword},'%')
						</if>
						<if test="matchingFlag == 0">					
							AND od.pm_fk IS NULL
						</if>
						<if test="matchingFlag == 1">
							AND od.pm_fk IS NOT NULL
						</if>
					</trim>
					ORDER BY
						od.or_regdate DESC
					) search_orders,
					
					(SELECT @RNUM:=0) R
			) inne
		WHERE
			<![CDATA[
			inne.ROWNUM >  #{firstRecordIndex} AND 
			inne.ROWNUM <= #{firstRecordIndex}+ #{recordCountPerPage}
			]]>
	</select>
	
	<select id="countingNotMatchingedOrders" resultType="int" parameterType="OrderSearchVO">
		SELECT 
			count(od.or_pk)
		FROM
			orders od
			INNER JOIN store_section ss ON od.ss_fk = ss.ss_pk
			LEFT JOIN product_matching pm ON pm.pm_pk = od.pm_fk
			LEFT JOIN products pro ON pm.product_fk = pro.product_pk
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="datePeriod == 0">
				<![CDATA[
					AND ${dateType} > DATE_FORMAT(NOW(), '%Y-%m-%d')
					AND  ${dateType} <= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 1 DAY), '%Y-%m-%d')
				]]>
			</if>
			<if test="datePeriod == 1">
				<![CDATA[
					AND ${dateType} >= DATE_ADD(DATE_FORMAT(NOW(), '%Y-%m-%d'),INTERVAL -7 DAY)
				]]>
			</if>
			<if test="datePeriod == 2">
				<![CDATA[
					AND ${dateType} > #{dateStart} 
					AND ${dateType} <= DATE_FORMAT(DATE_ADD(#{dateEnd}, INTERVAL 1 DAY), '%Y-%m-%d')
				]]>
			</if>
			<if test="searchType == 'buyerName'">
				AND or_buyer_name LIKE CONCAT('%',#{searchKeyword},'%')
			</if>
			<if test="searchType == 'receiverName'">
				AND or_receiver_name LIKE CONCAT('%',#{searchKeyword},'%')
			</if>
			<if test="searchType == 'buyerNum'">
				AND or_buyer_contract_number1 LIKE CONCAT('%',#{searchKeyword},'%')
			</if>
			<if test="searchType == 'receiverNum'">
				AND or_receiver_contract_number1 LIKE CONCAT('%',#{searchKeyword},'%')
			</if>
			<if test="searchType == 'orderNum'">
				AND or_order_number LIKE CONCAT('%',#{searchKeyword},'%')
			</if>
			<if test="searchType == 'orderProductNum'">
				AND or_product_order_number LIKE CONCAT('%',#{searchKeyword},'%')
			</if>
			<if test="searchType == 'storeProduct'">
				AND or_product LIKE CONCAT('%',#{searchKeyword},'%') 
			</if>
			<if test="searchType == 'matchingProduct'">
				AND pro.product_name LIKE CONCAT('%',#{searchKeyword},'%')
			</if>
			<if test="matchingFlag == 0">					
				AND od.pm_fk IS NULL
			</if>
			<if test="matchingFlag == 1">
				AND od.pm_fk IS NOT NULL
			</if>
		</trim>
		ORDER BY
			od.or_regdate DESC
	</select>
	
	<!-- 묶음 정리 기능 관련 -->
	
	
	<!-- 이 부분에서 자유롭게 묶음번호를 부여할 수 있도록 정리해야됌 -->
	<!--  최근 일주일간 들어온 주문서 중 묶음 정리가 안된 데이터를 주문번호로 묶어서 가져옴 -->
	<select id="selectNotMergedOrders" parameterType="StoreSectionVO" resultType="OrdersVO">
		SELECT
			GROUP_CONCAT(or_pk SEPARATOR ',') AS or_merge,
			or_sending_deadline,
			ss_fk
			<if test="ssMerge != null">
				${ssMerge}
			</if>
			
		FROM
			orders
		WHERE
			or_serial_special_number IS NULL
		GROUP BY
			or_sending_deadline,
			ss_fk,
			<if test="ssMerge != null">
				${ssMerge}
			</if>
	</select>
	
	<select id="selectOrdersByOrderNumber" parameterType="String" resultType="OrdersVO">
		SELECT
			or_pk
		FROM
			orders
		WHERE
			or_order_number = #{orOrderNumber}
	</select>
	
	
	<!-- 주문서 묶음번호 부여하기 -->
	<update id="grantOrSerialSpecialNumber" parameterType="OrdersVO">
		UPDATE
			orders
		SET 
			or_serial_special_number = #{orSerialSpecialNumber}
		WHERE
			or_pk IN 
				<foreach collection="orMergeList" item="item" index="index" separator="," open="(" close=")">
                    #{item}
                </foreach>
			
	</update>
	
	<update id="writeDevideOrderFlag"  parameterType="OrdersVO">
		UPDATE
			orders
		SET
			or_devide_flag = 1
		WHERE
			or_pk = #{orPk}
			
	</update>
	
	<update id="grantOrSerialSpecialNumberByOrPk" parameterType="OrdersVO">
		UPDATE
			orders
		SET 
			or_serial_special_number = #{orSerialSpecialNumber}
		WHERE
			or_pk = #{orPk}
			
	</update>

	<!-- 묶음 정리 기능 관련 끝 -->
	
	<update id="updateOrderDeliveryInvoiceNumber" parameterType="OrdersVO">
		UPDATE 
			orders
		SET 
			or_buyer_id = #{orBuyerId}
		WHERE 
			or_pk IN (
				SELECT 
					inne.or_pk
				FROM
					(
						SELECT 
							or_pk
						FROM
							orders
						WHERE
							or_order_number =  #{orOrderNumber}
							AND or_regdate >= DATE_ADD(DATE_FORMAT(NOW(), '%Y-%m-%d'), INTERVAL -8 DAY)
					) inne
				
			)
	</update>
	
	<!-- 원가 데이터 조회하기 -->
	<select id="selectNotMatchingedCostData" resultType="OrdersVO">
		SELECT
			INNE.or_pk,
			INNE.ss_fk,
			INNE.or_buyer_id,
			INNE.or_buyer_name,
            INNE.or_receiver_name,
            INNE.or_buyer_contract_number1,
            INNE.or_receiver_contract_number1,
            INNE.or_shipping_address,
            INNE.or_product_order_number,
			INNE.or_product,
			INNE.or_product_option,
			INNE.or_amount,
			INNE.or_product_price,
			INNE.or_total_price,
			INNE.or_discount_price,
            INNE.or_product_fk,
            INNE.or_delivery_message,
            INNE.or_option_fk,
            INNE.or_settlement_day,
			INNE.or_inflow_route,
			INNE.or_check_day,
			INNE.or_delivery_price,
			INNE.or_delivery_discount_price,
			INNE.or_payment_commision,
			INNE.or_another_payment_commision,
			INNE.om_store_option_name,
            CASE
				WHEN divide_count != 0
                THEN SUM(total_costs)/divide_count
                ELSE SUM(total_costs)
			END AS or_total_cost
    	FROM(
	   	 	SELECT
				od.or_pk,
				od.ss_fk,
				od.or_buyer_id,
				od.or_buyer_name,
	            od.or_receiver_name,
	            od.or_buyer_contract_number1,
	            od.or_receiver_contract_number1,
	            od.or_shipping_address,
	            od.or_product_order_number,
				od.or_product,
				od.or_product_option,
				od.or_amount,
				od.or_product_price,
				od.or_total_price,
				od.or_discount_price,
	            od.or_product_fk,
	            od.or_delivery_message,
	            od.or_option_fk,
	            od.or_settlement_day,
				od.or_inflow_route,
				od.or_check_day,
				od.or_delivery_price,
				od.or_delivery_discount_price,
				od.or_payment_commision,
				or_another_payment_commision,
	            pm.pm_pk,
	            
				om.om_pk,
				om.om_store_option_name,
				om.om_option_amount,
	            IF(od.pm_fk IS NULL, FALSE, TRUE) AS product_matching_checking,
	            IF(om.pm_fk IS NULL, FALSE, TRUE) AS option_matching_checking,
	            
	            IF(
					op.option_cost_flag = 1,
	                IF(
	                	om.om_supply_flag = 0 or om.om_supply_flag IS NULL,
	                	sum(op.option_cost * om.om_option_amount * od.or_amount),
	                	sum(op.option_supply_cost * om.om_option_amount * od.or_amount)
	                )
	                ,
					sum( ( ( (cd.cd_cost+(cd.cd_cost*cd.cd_loss_rate/100) ) / IF(cd.cd_measure = 'ea' , 1, 1000)  ) * cs.cost_measure_cal ) / ocm.ocm_production_divide * ocm.ocm_each * om.om_option_amount * od.or_amount)
	            )  AS total_costs,
	            COUNT(ocm.ocm_production_divide) as divide_count
			FROM
				orders od
				LEFT JOIN product_matching pm ON od.pm_fk = pm.pm_pk
				LEFT JOIN option_matching om ON om.pm_fk = pm.pm_pk AND od.or_product_option = om.om_store_option_name
				LEFT JOIN options op ON om.option_fk = op.option_pk
				LEFT JOIN options_costs_matching ocm ON ocm.option_fk = op.option_pk
				-- LEFT JOIN products pro ON pro.product_pk = op.product_fk
				LEFT JOIN costs cs ON cs.cost_pk = ocm.cost_fk
	            LEFT JOIN cost_detail cd ON cs.cd_fk = cd.cd_pk
			WHERE
				od.or_total_cost = 0
				<![CDATA[
					AND od.or_regdate >=  DATE_ADD(NOW(),INTERVAL -2 WEEK ) 
				]]>
			GROUP BY
				od.or_pk,
				od.ss_fk,
				od.or_buyer_id,
				od.or_buyer_name,
	            od.or_receiver_name,
	            od.or_buyer_contract_number1,
	            od.or_receiver_contract_number1,
	            od.or_shipping_address,
	            od.or_product_order_number,
				od.or_product,
				od.or_product_option,
				od.or_amount,
				od.or_product_price,
				od.or_total_price,
				od.or_discount_price,
	            od.or_product_fk,
	            od.or_delivery_message,
	            od.or_option_fk,
				od.or_settlement_day,
				or_inflow_route,
				or_check_day,
				od.or_delivery_price,
				od.or_delivery_discount_price,
				od.or_payment_commision,
				or_another_payment_commision,
	            pm.pm_pk,
	            om.om_pk,
				om.om_store_option_name,
				om.om_option_amount
			) INNE
            
            GROUP BY 
            INNE.or_pk,
			INNE.ss_fk,
			INNE.or_buyer_id,
			INNE.or_buyer_name,
            INNE.or_receiver_name,
            INNE.or_buyer_contract_number1,
            INNE.or_receiver_contract_number1,
            INNE.or_shipping_address,
            INNE.or_product_order_number,
			INNE.or_product,
			INNE.or_product_option,
			INNE.or_amount,
			INNE.or_product_price,
			INNE.or_total_price,
			INNE.or_discount_price,
            INNE.or_product_fk,
            INNE.or_delivery_message,
            INNE.or_option_fk,
            INNE.or_settlement_day,
			INNE.or_inflow_route,
			INNE.or_check_day,
			INNE.or_delivery_price,
			INNE.or_delivery_discount_price,
			INNE.or_payment_commision,
			INNE.or_another_payment_commision,
			INNE.om_store_option_name,
            INNE.divide_count
	
	</select>
	
	<!-- 원가 데이터 입력하기 -->
	<update id="updateOrderCostsData" parameterType="OrdersVO">
		UPDATE
			orders
		SET
			or_total_cost = #{orTotalCost}
		WHERE
			or_pk = #{orPk}
	</update>
	
	<!-- 선택된 주문값 임시 주문서 뽑기 -->
	<select id="selectedOrderExcelByOrderSerachVO" parameterType="com.gogi.proj.paging.OrderSearchVO" resultType="OrdersVO">
		SELECT
			OUTPUT.eos_seq AS or_user_column3,
			OUTPUT.product_name AS or_product,
	        OUTPUT.option_name AS or_product_option,
             IF(
				OUTPUT.or_request != '' AND OUTPUT.or_request IS NOT NULL,
                OUTPUT.or_request,
                ''         
            ) AS or_request,
	        OUTPUT.option_barcode_number1 AS or_user_column1,
	        SUM(OUTPUT.or_amount * OUTPUT.om_option_amount) AS or_amount
	    FROM
	    (
	        SELECT
				od.or_pk,
				eo.eos_seq,
				od.ss_fk,
				od.or_product_option,
				od.or_amount,
				od.or_request,
	            pm.pm_pk,
				pro.product_pk,
				pro.cf_fk,
				pro.product_name,
				pro.product_flag,
				om.om_pk,
				om.om_store_option_name,
				om.om_option_amount,
				op.option_pk,
	            op.option_name,
	            op.option_barcode_number1
			FROM
				orders od
				INNER JOIN product_matching pm ON od.pm_fk = pm.pm_pk
				INNER JOIN option_matching om ON om.pm_fk = pm.pm_pk AND od.or_product_option = om.om_store_option_name
				INNER JOIN options op ON om.option_fk = op.option_pk
				INNER JOIN excel_order_seq eo ON op.eo_fk = eo.eos_pk
				INNER JOIN products pro ON pro.product_pk = op.product_fk
                
				/* LEFT JOIN options_costs_matching ocm ON ocm.option_fk = op.option_pk */
				/* LEFT JOIN costs cs ON cs.cost_pk = ocm.cost_fk */
				/* LEFT JOIN cost_detail cd ON cs.cd_fk = cd.cd_pk */
			WHERE 
				od.or_cancled_flag = 0
				AND od.or_excel_div_flag = 0
				AND od.or_refunds = 0
				AND od.or_deposit_flag = 1
                AND od.or_serial_special_number	IN 
				<foreach collection="orSerialSpecialNumberList" item="specialNumber" index="index" separator="," open="(" close=")">
	                    #{specialNumber}
	            </foreach>
			GROUP BY
				od.or_pk,
				eo.eos_seq,
				od.ss_fk,
				od.or_product_option,
				od.or_amount,
                od.or_request,
	            pm.pm_pk,
	            om.om_pk,
				pro.product_pk,
				pro.cf_fk,
				pro.product_name,
				pro.product_flag,
				om.om_store_option_name,
				om.om_option_amount,
				op.option_pk,
	            op.option_name,
	            op.option_barcode_number1

			) OUTPUT
        GROUP BY
        	OUTPUT.eos_seq,
			OUTPUT.product_name,
			OUTPUT.option_name,
            OUTPUT.option_barcode_number1,
            or_request
		ORDER BY
			OUTPUT.eos_seq ASC
	</select>
	
	
	<select id="selectedOrderExcelByOrderSerachVOForVegit" parameterType="com.gogi.proj.paging.OrderSearchVO" resultMap="OrdersListInfoResultMap">
		SELECT
			OUTPUT.or_serial_special_number,
			OUTPUT.or_buyer_name,
			OUTPUT.or_receiver_name,
			OUTPUT.eos_seq AS or_user_column3,
			OUTPUT.product_name AS or_product,
	        OUTPUT.option_name AS or_product_option,
	        OUTPUT.option_barcode_number1 AS or_user_column1,
	        SUM(OUTPUT.or_amount * OUTPUT.om_option_amount) AS or_amount
	    FROM
	    (
	        SELECT
				od.or_pk,
				od.or_serial_special_number,
                od.or_buyer_name,
                od.or_receiver_name,
				eo.eos_seq,
				od.ss_fk,
				od.or_product_option,
				od.or_amount,
	            od.or_option_fk,
	            pm.pm_pk,
				pro.product_pk,
				pro.cf_fk,
				pro.product_name,
				pro.product_flag,
				om.om_pk,
				om.om_store_option_name,
				om.om_option_amount,
				op.option_pk,
	            op.option_name,
	            op.option_barcode_number1
			FROM
				orders od
				INNER JOIN product_matching pm ON od.pm_fk = pm.pm_pk
				INNER JOIN option_matching om ON om.pm_fk = pm.pm_pk AND od.or_product_option = om.om_store_option_name
				INNER JOIN options op ON om.option_fk = op.option_pk
				INNER JOIN excel_order_seq eo ON op.eo_fk = eo.eos_pk
				INNER JOIN products pro ON pro.product_pk = op.product_fk
                
				/* LEFT JOIN options_costs_matching ocm ON ocm.option_fk = op.option_pk */
				/* LEFT JOIN costs cs ON cs.cost_pk = ocm.cost_fk */
				/* LEFT JOIN cost_detail cd ON cs.cd_fk = cd.cd_pk */
			WHERE 
				od.or_serial_special_number	IN 
				<foreach collection="orSerialSpecialNumberList" item="specialNumber" index="index" separator="," open="(" close=")">
	                    #{specialNumber}
	            </foreach>
	            AND od.or_deposit_flag = 1
				AND eo.eos_begit_flag  = 1
				AND od.or_cancled_flag = 0
				AND od.or_excel_div_flag = 0
				AND od.or_refunds = 0
			GROUP BY
				od.or_pk,
				od.or_serial_special_number,
                od.or_buyer_name,
                od.or_receiver_name,
				eo.eos_seq,
				od.ss_fk,
				od.or_product_option,
				od.or_amount,
	            pm.pm_pk,
	            om.om_pk,
				pro.product_pk,
				pro.cf_fk,
				pro.product_name,
				pro.product_flag,
				om.om_store_option_name,
				om.om_option_amount,
				op.option_pk,
	            op.option_name,
	            op.option_barcode_number1

			) OUTPUT
        GROUP BY
        	OUTPUT.or_serial_special_number,
			OUTPUT.or_buyer_name,
			OUTPUT.or_receiver_name,
        	OUTPUT.eos_seq,
			OUTPUT.product_name,
			OUTPUT.option_name,
            OUTPUT.option_barcode_number1
		ORDER BY
			OUTPUT.eos_seq ASC;
	</select>
</mapper>








